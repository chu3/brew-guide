@import "tailwindcss";

/* 添加自定义暗黑模式变体，允许手动切换暗黑模式 */
@custom-variant dark (&:where(.dark, .dark *));

:root {
  --foreground: #000;
  --background: #FAFAFA;
  --rsbs-backdrop-bg: rgba(0, 0, 0, 0.3);
  --rsbs-bg: var(--background);
  --rsbs-handle-bg: rgba(0, 0, 0, 0.14);
  --rsbs-max-w: 500px;
  --rsbs-ml: auto;
  --rsbs-mr: auto;
  --rsbs-overlay-rounded: 16px;
  --font-sans: 'Geist Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  --font-mono: 'Geist Mono', ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;
  --keyboard-height: 0px;
  /* SVG 基础颜色变量 */
  --custom-shape-color: #000000;
}

/* 当系统偏好为暗黑模式时的样式 */
@media (prefers-color-scheme: dark) {
  :root {
    --foreground: #000;
    --background: #FAFAFA;
    --rsbs-backdrop-bg: rgba(0, 0, 0, 0.3);
  }
}

/* 当手动设置为暗黑模式时的样式 */
.dark {
  --foreground: #fff;
  --background: #171717;
  --rsbs-backdrop-bg: rgba(0, 0, 0, 0.5);
  --custom-shape-color: #ffffff;
}

/* 标准 SVG 图片深色模式处理 */
.dark .dark\:invert {
  filter: invert(1);
}

/* 自定义 SVG 基础样式 */
.custom-cup-shape svg *,
.custom-shape-svg-container svg * {
  stroke: var(--custom-shape-color) !important;
  fill: none !important;
  stroke-width: 1.5px !important;
}

/* 确保轮廓模式 */
.outline-only svg * {
  fill: none !important;
  stroke: var(--custom-shape-color) !important;
  stroke-width: 1.5px !important;
}

/* 确保 SVG 尺寸和视口统一 */
.custom-cup-shape svg,
.custom-shape-svg-container svg {
  width: 300px !important;
  height: 300px !important;
  max-width: 100% !important;
  max-height: 100% !important;
}

@layer base {

  html,
  body,
  #root {
    height: -webkit-fill-available;
  }

  /* 确保安全区域在 iOS 和 Android 设备上正常工作 */
  .pt-safe {
    padding-top: env(safe-area-inset-top);
    padding-top: constant(safe-area-inset-top);
    /* 确保顶部状态栏有足够的高度 */
    padding-top: max(env(safe-area-inset-top), 24px);
  }

  .pb-safe {
    padding-bottom: env(safe-area-inset-bottom);
    padding-bottom: constant(safe-area-inset-bottom);
    /* 增加Android底部导航栏的最小高度 */
    padding-bottom: max(env(safe-area-inset-bottom), 24px);
  }

  .px-safe {
    padding-left: env(safe-area-inset-left);
    padding-left: constant(safe-area-inset-left);
    padding-right: env(safe-area-inset-right);
    padding-right: constant(safe-area-inset-right);
  }

  /* 针对iOS状态栏的特殊处理 */
  .ios-pt-safe {
    padding-top: env(safe-area-inset-top);
    padding-top: constant(safe-area-inset-top);
  }

  /* 针对Android状态栏的特殊处理 */
  .android-pt-safe {
    padding-top: 24px;
    /* Android状态栏的固定高度 */
  }
}

html,
body {
  color: var(--foreground);
  background: var(--background);
  height: 100%;
  overflow: hidden;
  position: fixed;
  width: 100%;
  touch-action: manipulation;
  -webkit-overflow-scrolling: touch;
  font-family: var(--font-sans);
}

/* 允许内部容器滚动 */
.overflow-y-auto {
  -webkit-overflow-scrolling: touch;
  overflow-y: auto;
  height: 100%;
}

/* 需要底部操作栏间距的滚动容器 */
.scroll-with-bottom-bar {
  -webkit-overflow-scrolling: touch;
  overflow-y: auto;
  height: 100%;
  padding-bottom: calc(max(env(safe-area-inset-bottom), 28px) + 100px);
}

/* 确保内容区域不会被底部操作栏遮挡 */
.content-area {
  padding-bottom: calc(max(env(safe-area-inset-bottom), 28px) + 100px);
  /* 增加底部内边距 */
}

/* 添加底部操作栏的固定定位样式 */
.bottom-action-bar {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 50;
  background: var(--background);
  padding-bottom: max(env(safe-area-inset-bottom), 28px);
  box-shadow: 0 -1px 0 0 var(--background);
  /* 添加顶部阴影，确保渐变效果 */
}

/* 冲煮页面滚动容器样式 */
.brew-content-scroll {
  -webkit-overflow-scrolling: touch;
  overflow-y: auto;
  height: 100%;
  padding-bottom: calc(max(env(safe-area-inset-bottom), 28px) + 100px);
}

/* 可视化方案滚动容器样式 */
.visualization-scroll {
  -webkit-overflow-scrolling: touch;
  overflow-y: auto;
  height: 100%;
  padding-bottom: 0 !important;
}

/* 键盘相关样式 - 只保留核心样式 */
input:focus,
textarea:focus,
select:focus,
[contenteditable]:focus {
  position: relative;
  z-index: 10;
  /* 添加边距，确保滚动时有足够的空间 */
  scroll-margin-top: 100px;
  scroll-margin-bottom: 100px;
}

/* 针对iOS的聚焦处理 */
.ios-device input:focus,
.ios-device textarea:focus,
.ios-device select:focus {
  transform: translateZ(0);
  /* 触发iOS的硬件加速 */
}

/* 确保模态框的内容在键盘弹出时仍然可见 */
.ios-device .modal-form-container,
.android-device .modal-form-container {
  padding-bottom: 100px !important;
  /* 确保模态框内容有足够的底部空间 */
}

/* 针对表单内容在iOS上的处理 */
.ios-form {
  padding-bottom: 60px !important;
}

/* 模态框底部按钮处理 */
.modal-bottom-button {
  position: sticky;
  bottom: 16px;
  z-index: 10;
  margin: 16px 0;
  transition: bottom 0.3s ease;
}

/* 键盘弹出时的模态框底部按钮处理 */
.keyboard-is-open .modal-bottom-button {
  position: fixed;
  bottom: var(--keyboard-height, 0px);
  left: 0;
  right: 0;
  padding: 8px 16px;
  background: var(--background, #fafafa);
  margin: 0;
  z-index: 60;
  box-shadow: 0 -4px 6px -1px rgba(0, 0, 0, 0.05);
}

/* 解决Android表单聚焦问题 */
@media (max-width: 768px) {
  @supports (-webkit-touch-callout: none) {

    input,
    textarea,
    select {
      /* 阻止iOS缩放但不改变字体大小 */
      touch-action: manipulation;
    }
  }
}